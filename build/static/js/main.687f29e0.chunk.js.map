{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","fakeContact","id","name","number","axios","get","then","response","data","concat","create","newObject","post","update","put","remove","delete","Person","setVisible","setNotification","persons","onClick","window","confirm","console","log","filter","person","setTimeout","catch","error","removeItem","Persons","map","PersonForm","setPersons","setName","setNumber","onSubmit","event","preventDefault","includes","contact","currentId","index","findIndex","personObject","onChange","target","value","type","Filter","visible","toLowerCase","Notification","message","color","notificationStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","newName","setNewName","newNumber","setNewNumber","notification","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.687f29e0.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n//const baseUrl = 'https://hidden-wave-38698.herokuapp.com/'\n\nconst getAll = () => {\n\n  // Fake contact for debugging and testing purposes\n  const fakeContact = {\n    id: 99999,\n    name: 'Fake Contact',\n    number: '1234567'\n  }\n\n  const request = axios.get(baseUrl)\n  //return request.then(response => response.data)\n  return request.then(response => response.data.concat(fakeContact))\n\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst personService = {getAll, create, update, remove}\nexport default personService\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst removeItem = ({id, name, setVisible, setNotification, persons}) => {\n  if (window.confirm(\"Do you really want to remove \" + name + \"?\")) {\n    console.log('remove item: ' + id + ' name: ' + name)\n    personService\n      .remove(id)\n      .then(response => {\n        console.log('removed')\n        setVisible(persons.filter(person => person.id !== id))\n        setNotification('Removed ' + name)\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n      }).catch(error => {\n        setNotification('Error: ' + name + ' does not exist on the server')\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n        console.log('fail')\n      })\n\n  }\n}\n\nconst Person = ({id, name, number, setVisible, setNotification, persons}) => {\n  return (\n    <div>{name} {number} <button onClick={() => removeItem({id, name, setVisible, setNotification, persons})}>remove</button></div>\n  )\n}\n\nconst Persons = ({persons, setVisible, setNotification}) => {\n  console.log('calling Persons')\n  return(\n    persons.map(person => <Person key={person.name} id={person.id} name={person.name} number={person.number} setVisible={setVisible} setNotification={setNotification} persons={persons}/>)\n  )\n}\n\nexport default Persons\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({persons, setPersons,  name, setName, number, setNumber, setVisible, setNotification}) => {\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNumber(event.target.value)\n  }\n\n  const handleFormSubmit = (event) => {\n\n    event.preventDefault();\n    console.log('handleFormSubmit')\n\n    const names = persons.map(person => person.name)\n\n    // Check if name already exists and replace if requested by user\n    if(names.includes(name)) {\n      console.log('persons', persons)\n      const contact = persons.filter(person => person.name === name)\n      console.log('contact', contact)\n      const currentId = contact[0].id\n      const index = persons.findIndex(person => person.name === name)\n      console.log('index ', index)\n      console.log('person ', persons[index])\n      console.log('id: ' + persons[index].id)\n      if (window.confirm(name + \" already exists, do you want to replace?\")) {\n        console.log('change wanted')\n        const personObject = {name, number}\n\n        // Update database and view\n        personService\n          .update(currentId, personObject)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== currentId ? person : response.data))\n            setVisible(persons.map(person => person.id !== currentId ? person : response.data))\n            console.log('updated database and view')\n            setNotification('Updated ' + response.data.name)\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n          }).catch(error => {\n            setNotification('Error: ' + name + ' does not exist on the server')\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n            console.log('fail')\n          })\n      }\n      else {\n        return\n      }\n\n    // Name does not exist -> create new entry\n    } else {\n      const personObject = {name, number}\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setVisible(persons.concat(response.data))\n          setNotification('Added ' + response.data.name)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        }).catch(error => {\n          setNotification('Error: operation failed')\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n          console.log('fail')\n        })\n    }\n  }\n\n  return (\n    <form onSubmit = {handleFormSubmit}>\n      <div>\n        name: <input\n        onChange = {handleNameChange}\n        />\n        number: <input\n        onChange = {handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({persons, setVisible}) => {\n\n  //const [ filter, setFilter ] = useState('')\n\n  const handleFilter = (event) => {\n    const visible = persons.filter(person =>\n      person.name.toLowerCase().includes(event.target.value.toLowerCase()))\n    setVisible(visible)\n    console.log('Visible: ', visible)\n  }\n\n  return (\n\n    <div>\n    filter shown with\n    <input\n      onChange = {handleFilter}\n    />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  let color = 'green'\n  if(message.includes('Error:')) {\n    color = 'red'\n  }\n\n  const notificationStyle = {\n    color: color,\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ visible, setVisible ] = useState([])\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    console.log('using personService via Effect')\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n        setVisible(response)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Filter persons={persons} setVisible={setVisible}/>\n\n      <h3>Add a new</h3>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        name={newName}\n        setName={setNewName}\n        number={newNumber}\n        setNumber={setNewNumber}\n        setVisible={setVisible}\n        setNotification={setNotification}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        persons = {visible}\n        setVisible = {setVisible}\n        setNotification = {setNotification}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}