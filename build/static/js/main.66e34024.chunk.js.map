{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Person","name","number","setVisible","setNotification","persons","onClick","window","confirm","console","log","filter","person","setTimeout","catch","error","removeItem","Persons","map","PersonForm","setPersons","setName","setNumber","setError","onSubmit","event","preventDefault","includes","contact","currentId","index","findIndex","personObject","concat","onChange","target","value","type","Filter","visible","toLowerCase","Notification","message","color","notificationStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Error","App","useState","newName","setNewName","newNumber","setNewNumber","notification","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66e34024.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n//const baseUrl = 'https://hidden-wave-38698.herokuapp.com/'\n\nconst getAll = () => {\n\n  // Fake contact for debugging and testing purposes\n  const fakeContact = {\n    id: 99999,\n    name: 'Fake Contact',\n    number: '1234567'\n  }\n\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n  // Concat Fake contact for debuggin purposes\n  //return request.then(response => response.data.concat(fakeContact))\n\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst personService = {getAll, create, update, remove}\nexport default personService\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst removeItem = ({id, name, setVisible, setNotification, persons}) => {\n  if (window.confirm(\"Do you really want to remove \" + name + \"?\")) {\n    console.log('remove item: ' + id + ' name: ' + name)\n    personService\n      .remove(id)\n      .then(response => {\n        console.log('removed')\n        setVisible(persons.filter(person => person.id !== id))\n        setNotification('Removed ' + name)\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n      }).catch(error => {\n        setNotification('Error: ' + name + ' does not exist on the server')\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n        console.log('fail')\n      })\n\n  }\n}\n\nconst Person = ({id, name, number, setVisible, setNotification, persons}) => {\n  return (\n    <div>{name} {number} <button onClick={() => removeItem({id, name, setVisible, setNotification, persons})}>remove</button></div>\n  )\n}\n\nconst Persons = ({persons, setVisible, setNotification}) => {\n  console.log('calling Persons')\n  return(\n    persons.map(person => <Person key={person.name} id={person.id} name={person.name} number={person.number} setVisible={setVisible} setNotification={setNotification} persons={persons}/>)\n  )\n}\n\nexport default Persons\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({persons, setPersons,  name, setName, number, setNumber, setVisible, setNotification, setError}) => {\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNumber(event.target.value)\n  }\n\n  const handleFormSubmit = (event) => {\n\n    event.preventDefault();\n    console.log('handleFormSubmit')\n\n    const names = persons.map(person => person.name)\n\n    // Check if name already exists and replace if requested by user\n    if(names.includes(name)) {\n      console.log('persons', persons)\n      const contact = persons.filter(person => person.name === name)\n      console.log('contact', contact)\n      const currentId = contact[0].id\n      const index = persons.findIndex(person => person.name === name)\n      console.log('index ', index)\n      console.log('person ', persons[index])\n      console.log('id: ' + persons[index].id)\n      if (window.confirm(name + \" already exists, do you want to replace?\")) {\n        console.log('change wanted')\n        const personObject = {name, number}\n\n        // Update database and view\n        personService\n          .update(currentId, personObject)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== currentId ? person : response.data))\n            setVisible(persons.map(person => person.id !== currentId ? person : response.data))\n            console.log('updated database and view')\n            setNotification('Updated ' + response.data.name)\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n          }).catch(error => {\n            setNotification('Error: ' + name + ' does not exist on the server')\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n            console.log('fail')\n          })\n      }\n      else {\n        return\n      }\n\n    // Name does not exist -> create new entry\n    } else {\n      const personObject = {name, number}\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setVisible(persons.concat(response.data))\n          setNotification('Added ' + response.data.name)\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000)\n        }).catch(error => {\n          console.log(error.response.data)\n          //setNotification('Error: operation failed')\n          setError(error.response.data.error)\n          setTimeout(() => {\n            setError(null)\n          }, 3000)\n          //console.log('fail')\n        })\n    }\n  }\n\n  return (\n    <form onSubmit = {handleFormSubmit}>\n      <div>\n        name: <input\n        onChange = {handleNameChange}\n        />\n        number: <input\n        onChange = {handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({persons, setVisible}) => {\n\n  //const [ filter, setFilter ] = useState('')\n\n  const handleFilter = (event) => {\n    const visible = persons.filter(person =>\n      person.name.toLowerCase().includes(event.target.value.toLowerCase()))\n    setVisible(visible)\n    console.log('Visible: ', visible)\n  }\n\n  return (\n\n    <div>\n    filter shown with\n    <input\n      onChange = {handleFilter}\n    />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  let color = 'green'\n  if(message.includes('Error:')) {\n    color = 'red'\n  }\n\n  const notificationStyle = {\n    color: color,\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificationStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Error\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ visible, setVisible ] = useState([])\n  const [ notification, setNotification ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n  useEffect(() => {\n    console.log('using personService via Effect')\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n        setVisible(response)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Error message={error}/>\n      <Filter persons={persons} setVisible={setVisible}/>\n\n      <h3>Add a new</h3>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        name={newName}\n        setName={setNewName}\n        number={newNumber}\n        setNumber={setNewNumber}\n        setVisible={setVisible}\n        setNotification={setNotification}\n        setError={setError}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        persons = {visible}\n        setVisible = {setVisible}\n        setNotification = {setNotification}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}